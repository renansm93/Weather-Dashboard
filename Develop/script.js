
// Variable declaration
let city="";
let searchCity = $("#search-city");
let searchButton = $("#search-button");
let clearButton = $("#clear-history");
let currentCity = $("#current-city");
let currentDate = $("#current-date");
let currentTemperature = $("#temperature");
let currentHumidty= $("#humidity");
let currentWSpeed=$("#wind-speed");
let currentUvindex= $("#uv-index");
let cityList = [];
let cDate = moment().format("MMMM Do YYYY");

//API key generated by "api.openweathermap.org" 
let APIKey = "f0e3bf833207269b3a71b7a880f6ccab";

$(window).on('load', lastCitySearch)

// Finds the last city searched
function lastCitySearch() {
    let cityList = JSON.parse(localStorage.getItem("cName")); //check if there is a file named cName on the local drive, if yes is going to load on the variable cityList
       if (cityList !== null) {
        for (i = 0; i < cityList.length; i++) {
            addToList(cityList[i]);
        }
        city = cityList[i - 1];
        currentWeather(city);
    }
}


//List the cities searched
function addToList(cCity) {
    let listEl = $("<li>" + cCity.toUpperCase() + "</li>");
    $(listEl).attr("class", "list-group-item");//add the class "list group item" to the listEl variable
    $(".list-group").append(listEl);//load the variable litEL to the index.html
}


function currentWeather(city) {
    // Here we build the URL so we can get a data from server side.
    let urlcurrentWeather = "https://api.openweathermap.org/data/2.5/weather?q=" + city + "&APPID=" + APIKey + "&units=imperial"; //creates a varaible following the standsrs by opeanweathermap.org
    //ajax function which reads data from a web server
    $.ajax({ 
        url: urlcurrentWeather,     
        method: "GET",
     }).then(function (response) {

        //Dta object from server side Api for icon property.
        let weathericon = response.weather[0].icon;//creates a variable to get the weather icon code according to wheathermap.org
        let iconurl = "https://openweathermap.org/img/wn/" + weathericon + "@2x.png"; //create variable to get create a url to get the weather icon
        // The date format method is taken from the  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date
        let cDate = new Date(response.dt * 1000).toLocaleDateString('en-US');//returns the current date
        //parse the response for name of city and concanatig the date and icon.
        $(currentDate).html("Current Weather  " + cDate);
        $(currentCity).html(response.name + "<img src=" + iconurl + ">");
        // parse the response to display the current temperature.

        let tempF = response.main.temp;
        //Display the temperature
        $(currentTemperature).html((tempF).toFixed(2) + "&#8457");
         //Display the Wind speed
         let wSpeed = response.wind.speed.toFixed(2);
        $(currentWSpeed).html(wSpeed + "mph");
        // Display the Humidity
        $(currentHumidty).html(response.main.humidity + "%");
       
        
        //By Geographic coordinates method and using appid and coordinates as a parameter we are going build our uv query url inside the function below.       
        fdayWForecast(response.id);
        
        //Save the City name on the searched cities list
        if (response.cod == 200) {
            cityList = JSON.parse(localStorage.getItem("cName"));
           // console.log(cityList);
            if (cityList == null) {
                cityList = [];
                cityList.push(city.toUpperCase() );
                localStorage.setItem("cName", JSON.stringify(cityList));
                addToList(city);
            }
            else {
                if (find(city) > 0) {
                    cityList.push(city.toUpperCase());
                    localStorage.setItem("cName", JSON.stringify(cityList));
                    addToList(city);
                }
            }
        }

    });
}


// Here we display the 5 days forecast for the current city.
function fdayWForecast(cityid) {
    let urlfdayWForecast = "https://api.openweathermap.org/data/2.5/forecast?id=" + cityid + "&appid=" + APIKey + "&units=imperial";
    $.ajax({
        url: urlfdayWForecast,
        method: "GET"
    }).then(function (response) {
        for (i = 0; i < 5; i++) {
            let date = new Date((response.list[((i + 1) * 8) - 1].dt) * 1000).toLocaleDateString('en-US');
            let iconcode = response.list[((i + 1) * 8) - 1].weather[0].icon;
            let iconurl = "https://openweathermap.org/img/wn/" + iconcode + ".png";
            let tempF = response.list[((i + 1) * 8) - 1].main.temp.toFixed(2);
            let humidity = response.list[((i + 1) * 8) - 1].main.humidity;
            let wSpeed = response.list[((i + 1) * 8) - 1].wind.speed.toFixed(2);
            $("#fDate" + i).html(date);
            $("#fImg" + i).html("<img src=" + iconurl + ">");
            $("#fTemp" + i).html(tempF + "&#8457");
            $("#fWind" + i).html(wSpeed + "mph");
            $("#fHumidity" + i).html(humidity + "%");
        }
    });
}


// searches the city to see if it exists in the entries from the storage
function find(city) {
    for (let i = 0; i < cityList.length; i++) {
        if (city.toUpperCase() === cityList[i]) {
            return 0;
        }
    }
    return 1;
}


$("#search-button").on("click", searchWCity);

// Search and Display the curent and future weather after grabing the city form the input text box.
function searchWCity() {
    //event.preventDefault();
    if (searchCity.val().trim() !== "") {
        city = searchCity.val().trim();
        currentWeather(city);
    }
}



$(document).on("click", callcurrentWeather);

// display the past search again when the list group item is clicked in search history
function callcurrentWeather(event) {
    let liEl = event.target;
    if (event.target.matches("li")) {
        city = liEl.textContent.trim();
        currentWeather(city);
    }
}


$("#clear-history").on("click", cHistory);

//Clear the search history
function cHistory(event){
    cityList=[];
    localStorage.removeItem("cName");
    document.location.reload();
}
